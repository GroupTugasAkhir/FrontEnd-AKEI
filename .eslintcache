[{"D:\\PURWADHIKA\\FINAL PROJECT\\FrontEnd-AKEI\\src\\index.js":"1","D:\\PURWADHIKA\\FINAL PROJECT\\FrontEnd-AKEI\\src\\pages\\Home.jsx":"2","D:\\PURWADHIKA\\FINAL PROJECT\\FrontEnd-AKEI\\src\\helpers\\creditValidation.jsx":"3","D:\\PURWADHIKA\\FINAL PROJECT\\FrontEnd-AKEI\\src\\component\\card\\CardCustom.jsx":"4","D:\\PURWADHIKA\\FINAL PROJECT\\FrontEnd-AKEI\\src\\pages\\admin\\admin.jsx":"5","D:\\PURWADHIKA\\FINAL PROJECT\\FrontEnd-AKEI\\src\\pages\\detail_product\\DetailProduct.jsx":"6","D:\\PURWADHIKA\\FINAL PROJECT\\FrontEnd-AKEI\\src\\pages\\Testing.jsx":"7","D:\\PURWADHIKA\\FINAL PROJECT\\FrontEnd-AKEI\\src\\helpers\\priceFormatter.jsx":"8","D:\\PURWADHIKA\\FINAL PROJECT\\FrontEnd-AKEI\\src\\pages\\admin\\inventoryLog.jsx":"9","D:\\PURWADHIKA\\FINAL PROJECT\\FrontEnd-AKEI\\src\\pages\\cart\\Cart.jsx":"10","D:\\PURWADHIKA\\FINAL PROJECT\\FrontEnd-AKEI\\src\\component\\HeaderAdmin.jsx":"11"},{"size":962,"mtime":1606743838574,"results":"12","hashOfConfig":"13"},{"size":1565,"mtime":1607065719068,"results":"14","hashOfConfig":"13"},{"size":547,"mtime":1607094706893,"results":"15","hashOfConfig":"13"},{"size":1511,"mtime":1607146688005,"results":"16","hashOfConfig":"13"},{"size":19877,"mtime":1607152765354,"results":"17","hashOfConfig":"13"},{"size":3953,"mtime":1607146688027,"results":"18","hashOfConfig":"13"},{"size":1931,"mtime":1606795369635,"results":"19","hashOfConfig":"13"},{"size":160,"mtime":1606899518810,"results":"20","hashOfConfig":"13"},{"size":4259,"mtime":1607146688022,"results":"21","hashOfConfig":"13"},{"size":16468,"mtime":1607169099644,"results":"22","hashOfConfig":"13"},{"size":3243,"mtime":1607146688002,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"18vz7w0",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\PURWADHIKA\\FINAL PROJECT\\FrontEnd-AKEI\\src\\index.js",[],["51","52"],"D:\\PURWADHIKA\\FINAL PROJECT\\FrontEnd-AKEI\\src\\pages\\Home.jsx",[],["53","54"],"D:\\PURWADHIKA\\FINAL PROJECT\\FrontEnd-AKEI\\src\\helpers\\creditValidation.jsx",["55","56"],"export function credit(input) {\r\n    var angka = 0\r\n    var output = 0\r\n    var  y= input\r\n    var a\r\n    do {\r\n        a = y%(10)\r\n        var b\r\n        y = (y-a)/10\r\n        if(angka%2==1){\r\n            a*=2\r\n            if(a>9 ){\r\n                b = a%10\r\n                output += (b+1)\r\n            } else {\r\n                output += a\r\n            }\r\n        } else {\r\n            output += a\r\n        }\r\n        angka++\r\n    } while (y > 0);\r\n\r\n    if(output%10 == 0) {\r\n      return true\r\n    } else {\r\n        return false\r\n    } \r\n  }","D:\\PURWADHIKA\\FINAL PROJECT\\FrontEnd-AKEI\\src\\component\\card\\CardCustom.jsx",["57"],"D:\\PURWADHIKA\\FINAL PROJECT\\FrontEnd-AKEI\\src\\pages\\admin\\admin.jsx",["58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77"],"D:\\PURWADHIKA\\FINAL PROJECT\\FrontEnd-AKEI\\src\\pages\\detail_product\\DetailProduct.jsx",["78"],"import React, { useEffect, useState } from 'react';\r\nimport Header from './../../component/header/Header'\r\nimport './style.css'\r\nimport { priceFormatter } from '../../helpers/priceFormatter';\r\nimport { API_URL_SQL } from '../../helpers/apiurl';\r\nimport Axios from 'axios'\r\n\r\nconst DetailProduct = (props) => {\r\n    const {match} = props\r\n    let {id} = match.params\r\n    \r\n    const [qtyproduct, setqtyproduct] = useState(0)\r\n    const [detailProd,setDetailProd] = useState(null)\r\n    const plusBtn = () => {\r\n        let newQty = qtyproduct\r\n        newQty++\r\n        setqtyproduct(newQty)\r\n    }\r\n\r\n    const minBtn = () => {\r\n        let newQty = qtyproduct\r\n        newQty--\r\n        setqtyproduct(newQty)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        Axios.get(`${API_URL_SQL}/admin/getproduct/${id}`)\r\n        .then((res)=>{\r\n            setDetailProd(res.data[0])\r\n        }).catch((err)=>console.log(err))\r\n    },[])\r\n\r\n    \r\n    if(detailProd===null){\r\n        return (\r\n            <div>Loading</div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header style={{backgroundColor: '#72ceb8'}}/>\r\n            <div className='mainsection'>\r\n                <div className='detailsection'>\r\n                    <div className='det-left-side'>\r\n                        <div className='det-img'>\r\n                            <img src={API_URL_SQL+detailProd.image} style={{objectFit: 'cover', objectPosition: '50% 50%'}} width='100%' height='100%' alt=\"productimg\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className='det-right-side'>\r\n                        <div className='inside-right-side'>\r\n                            <div className='categ-product'>\r\n                                <div className='categ-product-title'>\r\n                                    {detailProd.category_name}\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <div className='product-title'>\r\n                                    {detailProd.product_name}\r\n                                </div>\r\n                                <div className='product-desc'>\r\n                                    {detailProd.description}\r\n                                </div>\r\n                            </div>\r\n                            <div className='product-qty-section'>\r\n                                <div className='qty-side'>\r\n                                    <div className='qty-title'>\r\n                                        QUANTITY\r\n                                    </div>\r\n                                    <div className='d-flex mt-1'>\r\n                                        {\r\n                                            qtyproduct < 1?\r\n                                            <button className='qty-button-minus' style={{backgroundColor:'#e5e5e5'}} disabled>-</button>\r\n                                            :\r\n                                            <button className='qty-button-minus' onClick={()=>minBtn()}>-</button>\r\n                                        }\r\n                                        <div className='qty-area'>\r\n                                            {qtyproduct}\r\n                                        </div>\r\n                                        <button className='qty-button-plus' onClick={()=>plusBtn()}>+</button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='price-side'>\r\n                                    {priceFormatter(detailProd.price)}\r\n                                </div>\r\n                            </div>\r\n                            <button className='addcart-button'>Add to Cart</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DetailProduct","D:\\PURWADHIKA\\FINAL PROJECT\\FrontEnd-AKEI\\src\\pages\\Testing.jsx",[],"D:\\PURWADHIKA\\FINAL PROJECT\\FrontEnd-AKEI\\src\\helpers\\priceFormatter.jsx",[],"D:\\PURWADHIKA\\FINAL PROJECT\\FrontEnd-AKEI\\src\\pages\\admin\\inventoryLog.jsx",["79","80","81","82","83","84","85","86","87"],"D:\\PURWADHIKA\\FINAL PROJECT\\FrontEnd-AKEI\\src\\pages\\cart\\Cart.jsx",["88","89","90","91"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport {Modal, ModalHeader, ModalBody, ModalFooter, CustomInput} from 'reactstrap'\r\nimport Header from './../../component/header/Header'\r\nimport './style.css'\r\nimport {priceFormatter, API_URL_SQL, credit} from './../../helpers'\r\nimport Axios from 'axios'\r\nimport {connect} from 'react-redux'\r\nimport Swal from 'sweetalert2'\r\nimport {findNearest} from 'geolib'\r\n\r\n\r\n//testing\r\nimport testImg from './../../assets/mainregimg.jpg'\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.white,\r\n      color: theme.palette.common.black,\r\n    },\r\n  }))(TableCell);\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n      backgroundColor: 'white',\r\n      color: 'white'\r\n    },\r\n  });\r\n\r\nconst Cart = (props) => {\r\n    const isCancelled = useRef(false)\r\n    const classes = useStyles();\r\n    const [dataCart, setdataCart] = useState([])\r\n    const [payModal, setpayModal] = useState(false)\r\n    const [choiceMethod, setchoiceMethod] = useState(0)\r\n    const ccPay = useRef()\r\n    const [invoicePhoto, setinvoicePhoto] = useState(null)\r\n\r\n    const [dataLocation, setdataLocation] = useState([])\r\n    const [matchLoc, setmatchLoc] = useState({})\r\n    const [longlat, setlonglat] = useState('')\r\n    const [curloc, setcurloc] = useState(false)\r\n    const [inputloc, setinputloc] = useState(false)\r\n    const addressUser = useRef()\r\n    const [getinputuser, setgetinputuser] = useState(false)\r\n\r\n    useEffect(()=> {\r\n        getCartData()\r\n\r\n        return ()=> {\r\n            isCancelled.current = true\r\n        }\r\n    },[])\r\n\r\n    const getCartData = async () => {\r\n        try {\r\n            const {data} = await Axios.get(`${API_URL_SQL}/cart/getCart/${props.Auth.user_id}`)\r\n            if(!isCancelled.current) {\r\n                setdataCart(data.cartData)\r\n                setdataLocation(data.locationData)\r\n                console.log(data.locationData);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    \r\n    //show current location start\r\n    const geoLocation = () => {\r\n        if(navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(showPosition)\r\n        } else {\r\n            alert('Geolocation is not supported by this browser.')\r\n        }\r\n    }\r\n    \r\n    const showPosition = (position) => {\r\n        let latitude = position.coords.latitude\r\n        let longitude = position.coords.longitude\r\n        setlonglat(`${latitude}` + `,${longitude}`)\r\n\r\n        const nearDist = findNearest({ latitude: latitude, longitude: longitude }, dataLocation);\r\n        setmatchLoc(nearDist)\r\n        console.log(nearDist);\r\n    }\r\n    //show current location end\r\n\r\n    //address from user input start\r\n\r\n    const getUserAddress = () => {\r\n        const userAddress = addressUser.current.value\r\n        Axios.get(`https://api.opencagedata.com/geocode/v1/json?`,{\r\n            params:{\r\n                key: 'cdeab36e4fec4073b0de60ff6b595c70',\r\n                q: userAddress\r\n            }\r\n        }).then((res)=> {\r\n            console.log(res.data.results[0]);\r\n            setlonglat(`${res.data.results[0].geometry.lat}` + `,${res.data.results[0].geometry.lng}`)\r\n            const nearDist = findNearest({ latitude: res.data.results[0].geometry.lat, longitude: res.data.results[0].geometry.lng }, dataLocation);\r\n            setmatchLoc(nearDist)\r\n            console.log(nearDist);\r\n            setgetinputuser(true)\r\n        }).catch(err=> {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    //address from user input end\r\n\r\n    const plusBtn = (ind) => {\r\n        const plusVar = [...dataCart]\r\n        plusVar[ind].quantity += 1\r\n        setdataCart(plusVar)\r\n\r\n        Axios.post(`${API_URL_SQL}/cart/updateCart`,plusVar[ind])\r\n        .then((res)=> {\r\n            console.log(res.data);\r\n        }).catch(err=> {\r\n            console.log(err.response.data.message);\r\n        })\r\n    }\r\n\r\n    const minBtn = (ind) => {\r\n        const minVar = [...dataCart]\r\n        minVar[ind].quantity -= 1\r\n        setdataCart(minVar)\r\n\r\n        if(minVar[ind].quantity < 1) {\r\n            let idData = {\r\n                idtrans: minVar[ind].idtrans,\r\n                idprod: minVar[ind].idprod,\r\n            }\r\n            minVar.splice(ind, 1)\r\n\r\n            Axios.post(`${API_URL_SQL}/cart/deleteCart`,idData)\r\n            .then((res)=> {\r\n                console.log(res.data);\r\n            }).catch(err=> {\r\n                console.log(err.response.data.message);\r\n            })\r\n        } else {\r\n            Axios.post(`${API_URL_SQL}/cart/updateCart`,minVar[ind])\r\n            .then((res)=> {\r\n                console.log(res.data);\r\n            }).catch(err=> {\r\n                console.log(err.response.data.message);\r\n            })\r\n        }\r\n    }\r\n\r\n    const renderTotalPrice = () => {\r\n        var total = dataCart.reduce((total, num)=> {\r\n            return total + (num.price * num.quantity)\r\n        }, 0)\r\n        return total\r\n    }\r\n\r\n    const oninputFileChange = (e) => {\r\n        if(e.target.files[0]) {\r\n            setinvoicePhoto(e.target.files[0])\r\n        } else {\r\n            setinvoicePhoto(null)\r\n        }\r\n      }\r\n\r\n    const onPayClick=()=>{\r\n        if(choiceMethod === '1') {\r\n            onPaywithInvoicePhoto()\r\n        } else if(choiceMethod === '2') {\r\n            if(credit(parseInt(ccPay.current.value))){\r\n                onPaywithCreditCard()\r\n            } else {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'Your credit card is not valid!',\r\n                  })\r\n            }\r\n        } else {\r\n            Swal.fire(\r\n                'Payment Methode?',\r\n                'Choose your payment methode first!',\r\n                'question'\r\n              )\r\n        }\r\n    }\r\n\r\n    const onPaywithInvoicePhoto = () => {\r\n        console.log(dataCart[0].idtrans);\r\n        console.log(invoicePhoto);\r\n        console.log(longlat);\r\n        console.log(matchLoc);\r\n\r\n        var formData = new FormData()\r\n        var options = {\r\n            headers: {\r\n                'Content-type':'multipart/form-data',\r\n            },\r\n        }\r\n\r\n        formData.append('invoice', invoicePhoto)\r\n        formData.append('datainvoice', JSON.stringify({\r\n            user_id: props.Auth.user_id,\r\n            idtrans: dataCart[0].idtrans,\r\n            notes: longlat,\r\n            matchLoc: matchLoc\r\n        }))\r\n        Axios.post(`${API_URL_SQL}/transaction/onpayinvoice`,formData,options)\r\n        .then((res)=> {\r\n            if(res.data === 'succeed') {\r\n                setdataCart([])\r\n                Swal.fire({\r\n                    position: 'top',\r\n                    icon: 'success',\r\n                    title: 'Thank you for buying with AKEI!',\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                  })\r\n                setpayModal(false)\r\n            }\r\n        }).catch(err=> {\r\n            console.log(err.response.data.message);\r\n        })\r\n    }\r\n\r\n    const onPaywithCreditCard = () => {\r\n        console.log(dataCart[0].idtrans);\r\n        console.log(ccPay.current.value);\r\n        console.log(longlat);\r\n        console.log(matchLoc);\r\n\r\n        Axios.post(`${API_URL_SQL}/transaction/onpaycc`,{\r\n            user_id: props.Auth.user_id,\r\n            idtrans: dataCart[0].idtrans,\r\n            payment_proof: ccPay.current.value,\r\n            notes: longlat,\r\n            matchLoc: matchLoc\r\n        }).then((res)=> {\r\n            if(res.data === 'succeed') {\r\n                setdataCart([])\r\n                Swal.fire({\r\n                    position: 'top',\r\n                    icon: 'success',\r\n                    title: 'Thank you for buying with AKEI!',\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                  })\r\n                setpayModal(false)\r\n            }\r\n        }).catch((err)=> {\r\n            console.log(err.response.data.message);\r\n        })\r\n    }\r\n\r\n    const renderCart = () => {\r\n        return dataCart.map((val, ind)=> {\r\n            return (\r\n                <TableRow key={ind+1}>\r\n                    <TableCell style={{width: '100px'}}>\r\n                        <div className='cartimg'>\r\n                            <img style={{objectFit: 'contain', objectPosition: '50% 50%'}} width='100%' height='100%' src={API_URL_SQL + val.image} alt={val.product_name} />\r\n                        </div>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                        <div className='cart-words-prod'>\r\n                            {val.product_name}\r\n                        </div> \r\n                    </TableCell>\r\n                    <TableCell>\r\n                        <div className='cart-words'>\r\n                            {priceFormatter(val.price)}\r\n                        </div>\r\n                        </TableCell>\r\n                    <TableCell>\r\n                        <div className='d-flex'>\r\n                            <button className='qty-button-minus' onClick={()=>minBtn(ind)}>-</button>\r\n                            <div className='qty-area'>\r\n                                {val.quantity}\r\n                            </div>\r\n                            <button className='qty-button-plus' onClick={()=>plusBtn(ind)}>+</button>\r\n                        </div>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                        <div className='cart-words'>\r\n                            {priceFormatter(val.price*val.quantity)}\r\n                        </div>\r\n                    </TableCell>\r\n                </TableRow>            \r\n            )\r\n        })\r\n    }\r\n\r\n    const curlocationChange = () => {\r\n        setcurloc(true)\r\n        setinputloc(false)\r\n        geoLocation()\r\n    }\r\n\r\n    const inputlocationChange = () => {\r\n        setinputloc(true)\r\n        setcurloc(false)\r\n    }\r\n\r\n    const toggle = () => {\r\n        setpayModal(!payModal)\r\n        setinvoicePhoto(null)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal style={{marginTop:80}} isOpen={payModal} toggle={toggle}>\r\n                <ModalHeader toggle={toggle}>Payment</ModalHeader>\r\n                <ModalBody>\r\n                    <select onChange={(e)=> setchoiceMethod(e.target.value)} className='form-control' defaultValue={0} >\r\n                        <option value=\"0\" hidden>Choose your payment method</option>\r\n                        <option value=\"1\">Invoice Proof</option>\r\n                        <option value=\"2\">Credit Card</option>\r\n                    </select>\r\n                    {\r\n                       choiceMethod === '2'?\r\n                        <input type='number' className='form-control my-2' ref={ccPay} placeholder='input your credit card'/>\r\n                        :\r\n                       choiceMethod === '1'?\r\n                       <div>\r\n                           <CustomInput className='form-control my-2' onChange={oninputFileChange} type='file' label={invoicePhoto ? invoicePhoto.name : 'select invoice'} />\r\n                           {\r\n                               invoicePhoto?\r\n                               <div className='mt-2'>\r\n                                   <img src={URL.createObjectURL(invoicePhoto)} \r\n                                   height = '200' \r\n                                   width = '200' \r\n                                   alt = \"invoice\"/>\r\n                               </div>\r\n                               :\r\n                               null\r\n                           }\r\n                       </div>\r\n                        :\r\n                        null\r\n                    }\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <button onClick={onPayClick} className='checkout-button'>\r\n                        Bayar\r\n                    </button>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n            <Header style={{backgroundColor: '#72ceb8'}}/>\r\n            <div style={{marginTop: '80px', marginInline: '50px'}} >\r\n                <div className='cartsection'>\r\n                    <div className='cart-left-side'>\r\n                        <Paper elevation={0}>\r\n                            <TableContainer>\r\n                                <Table stickyHeader className={classes.table}>\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <StyledTableCell colSpan='2'>Product</StyledTableCell>\r\n                                            <StyledTableCell>Price</StyledTableCell>\r\n                                            <StyledTableCell>Quantity</StyledTableCell>\r\n                                            <StyledTableCell>Total</StyledTableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {renderCart()}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </Paper>\r\n                    </div>\r\n                    <div className='cart-right-side'>\r\n                        <div className='cart-right-side-section'>\r\n                            <div className='right-top-side'>\r\n                                <div style={{padding: '10px'}}>\r\n                                    <h4>Order Summary</h4>\r\n                                    <p style={{color: 'gray'}}>lorem ipsum</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className='right-bottom-side'>\r\n                                <div className='checkout-side'>\r\n                                    <div>\r\n                                        <div style={{color: 'gray'}}>Total Price</div>\r\n                                        <div>{priceFormatter(renderTotalPrice())}</div>\r\n                                    </div>\r\n                                    {\r\n                                        curloc || getinputuser ?\r\n\r\n                                        <button onClick={()=> setpayModal(true)} className='checkout-button'>Checkout</button>\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            {\r\n                                dataCart.length?\r\n                                <>\r\n                                    <div className='d-flex justify-content-center align-items-center'>\r\n                                        <h5 className='mb-2 mt-5'>Choose Payment Address</h5>\r\n                                    </div>\r\n                                    <div onClick={curlocationChange} className={curloc?'location-change':'current-location'}>\r\n                                        Using current location\r\n                                    </div>\r\n                                    <div className={inputloc?'location-change':'input-location'}>\r\n                                        <input onClick={inputlocationChange} ref={addressUser} type=\"text\" placeholder='input your address'/>\r\n                                        <button className='getbutton' onClick={getUserAddress}>Get</button>\r\n                                    </div>\r\n                                </>\r\n                                :\r\n                                null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst Mapstatetoprops = (state) => {\r\n    return {\r\n        Auth: state.Auth\r\n    }\r\n}\r\n\r\nexport default connect(Mapstatetoprops)(Cart)","D:\\PURWADHIKA\\FINAL PROJECT\\FrontEnd-AKEI\\src\\component\\HeaderAdmin.jsx",["92","93","94","95","96","97","98","99"],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"100","replacedBy":"104"},{"ruleId":"102","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":10,"column":19,"nodeType":"108","messageId":"109","endLine":10,"endColumn":21},{"ruleId":"106","severity":1,"message":"107","line":24,"column":18,"nodeType":"108","messageId":"109","endLine":24,"endColumn":20},{"ruleId":"110","severity":1,"message":"111","line":10,"column":24,"nodeType":"112","messageId":"113","endLine":10,"endColumn":38},{"ruleId":"110","severity":1,"message":"114","line":19,"column":3,"nodeType":"112","messageId":"113","endLine":19,"endColumn":14},{"ruleId":"110","severity":1,"message":"115","line":25,"column":8,"nodeType":"112","messageId":"113","endLine":25,"endColumn":15},{"ruleId":"110","severity":1,"message":"116","line":26,"column":8,"nodeType":"112","messageId":"113","endLine":26,"endColumn":14},{"ruleId":"110","severity":1,"message":"117","line":28,"column":9,"nodeType":"112","messageId":"113","endLine":28,"endColumn":28},{"ruleId":"110","severity":1,"message":"118","line":44,"column":7,"nodeType":"112","messageId":"113","endLine":44,"endColumn":11},{"ruleId":"110","severity":1,"message":"119","line":126,"column":12,"nodeType":"112","messageId":"113","endLine":126,"endColumn":16},{"ruleId":"110","severity":1,"message":"120","line":126,"column":18,"nodeType":"112","messageId":"113","endLine":126,"endColumn":26},{"ruleId":"110","severity":1,"message":"121","line":149,"column":22,"nodeType":"112","messageId":"113","endLine":149,"endColumn":33},{"ruleId":"122","severity":1,"message":"123","line":172,"column":7,"nodeType":"124","endLine":172,"endColumn":9,"suggestions":"125"},{"ruleId":"110","severity":1,"message":"126","line":184,"column":11,"nodeType":"112","messageId":"113","endLine":184,"endColumn":22},{"ruleId":"110","severity":1,"message":"127","line":188,"column":11,"nodeType":"112","messageId":"113","endLine":188,"endColumn":22},{"ruleId":"110","severity":1,"message":"128","line":193,"column":11,"nodeType":"112","messageId":"113","endLine":193,"endColumn":13},{"ruleId":"106","severity":1,"message":"107","line":207,"column":24,"nodeType":"108","messageId":"109","endLine":207,"endColumn":26},{"ruleId":"110","severity":1,"message":"129","line":224,"column":11,"nodeType":"112","messageId":"113","endLine":224,"endColumn":18},{"ruleId":"130","severity":1,"message":"131","line":377,"column":15,"nodeType":"132","endLine":377,"endColumn":77},{"ruleId":"106","severity":1,"message":"107","line":417,"column":22,"nodeType":"108","messageId":"109","endLine":417,"endColumn":24},{"ruleId":"106","severity":1,"message":"107","line":425,"column":22,"nodeType":"108","messageId":"109","endLine":425,"endColumn":24},{"ruleId":"106","severity":1,"message":"107","line":518,"column":30,"nodeType":"108","messageId":"109","endLine":518,"endColumn":32},{"ruleId":"106","severity":1,"message":"107","line":520,"column":32,"nodeType":"108","messageId":"109","endLine":520,"endColumn":34},{"ruleId":"106","severity":1,"message":"107","line":522,"column":32,"nodeType":"108","messageId":"109","endLine":522,"endColumn":34},{"ruleId":"122","severity":1,"message":"133","line":31,"column":7,"nodeType":"124","endLine":31,"endColumn":9,"suggestions":"134"},{"ruleId":"110","severity":1,"message":"135","line":4,"column":10,"nodeType":"112","messageId":"113","endLine":4,"endColumn":20},{"ruleId":"110","severity":1,"message":"136","line":4,"column":22,"nodeType":"112","messageId":"113","endLine":4,"endColumn":32},{"ruleId":"110","severity":1,"message":"137","line":5,"column":8,"nodeType":"112","messageId":"113","endLine":5,"endColumn":12},{"ruleId":"110","severity":1,"message":"138","line":6,"column":8,"nodeType":"112","messageId":"113","endLine":6,"endColumn":11},{"ruleId":"110","severity":1,"message":"139","line":7,"column":8,"nodeType":"112","messageId":"113","endLine":7,"endColumn":18},{"ruleId":"110","severity":1,"message":"115","line":8,"column":8,"nodeType":"112","messageId":"113","endLine":8,"endColumn":15},{"ruleId":"110","severity":1,"message":"116","line":9,"column":8,"nodeType":"112","messageId":"113","endLine":9,"endColumn":14},{"ruleId":"110","severity":1,"message":"140","line":10,"column":10,"nodeType":"112","messageId":"113","endLine":10,"endColumn":18},{"ruleId":"106","severity":1,"message":"107","line":37,"column":28,"nodeType":"108","messageId":"109","endLine":37,"endColumn":30},{"ruleId":"110","severity":1,"message":"141","line":21,"column":8,"nodeType":"112","messageId":"113","endLine":21,"endColumn":15},{"ruleId":"122","severity":1,"message":"142","line":60,"column":7,"nodeType":"124","endLine":60,"endColumn":9,"suggestions":"143"},{"ruleId":"144","severity":1,"message":"145","line":87,"column":34,"nodeType":"108","messageId":"146","endLine":87,"endColumn":35},{"ruleId":"144","severity":1,"message":"145","line":106,"column":62,"nodeType":"108","messageId":"146","endLine":106,"endColumn":63},{"ruleId":"110","severity":1,"message":"147","line":12,"column":23,"nodeType":"112","messageId":"113","endLine":12,"endColumn":38},{"ruleId":"110","severity":1,"message":"148","line":16,"column":8,"nodeType":"112","messageId":"113","endLine":16,"endColumn":24},{"ruleId":"110","severity":1,"message":"149","line":17,"column":8,"nodeType":"112","messageId":"113","endLine":17,"endColumn":11},{"ruleId":"110","severity":1,"message":"115","line":18,"column":8,"nodeType":"112","messageId":"113","endLine":18,"endColumn":15},{"ruleId":"110","severity":1,"message":"150","line":19,"column":8,"nodeType":"112","messageId":"113","endLine":19,"endColumn":18},{"ruleId":"110","severity":1,"message":"151","line":19,"column":22,"nodeType":"112","messageId":"113","endLine":19,"endColumn":33},{"ruleId":"110","severity":1,"message":"152","line":19,"column":35,"nodeType":"112","messageId":"113","endLine":19,"endColumn":46},{"ruleId":"110","severity":1,"message":"153","line":39,"column":7,"nodeType":"112","messageId":"113","endLine":39,"endColumn":18},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],["154"],["155"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'setDataCatalog' is assigned a value but never used.","Identifier","unusedVar","'CustomInput' is defined but never used.","'Popover' is defined but never used.","'Button' is defined but never used.","'BsChevronDoubleDown' is defined but never used.","'data' is assigned a value but never used.","'page' is assigned a value but never used.","'setPages' is assigned a value but never used.","'setEditForm' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'allCategory' and 'allProduct'. Either include them or remove the dependency array.","ArrayExpression",["156"],"'handleClick' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'id' is assigned a value but never used.","'options' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["157"],"'makeStyles' is defined but never used.","'withStyles' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'Typography' is defined but never used.","'Settings' is defined but never used.","'testImg' is defined but never used.","React Hook useEffect has a missing dependency: 'getCartData'. Either include it or remove the dependency array.",["158"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'FaCartArrowDown' is defined but never used.","'ShoppingCartIcon' is defined but never used.","'Box' is defined but never used.","'PopupState' is defined but never used.","'bindTrigger' is defined but never used.","'bindPopover' is defined but never used.","'StyledBadge' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},"Update the dependencies array to be: [allCategory, allProduct]",{"range":"165","text":"166"},"Update the dependencies array to be: [id]",{"range":"167","text":"168"},"Update the dependencies array to be: [getCartData]",{"range":"169","text":"170"},[6661,6663],"[allCategory, allProduct]",[914,916],"[id]",[2066,2068],"[getCartData]"]
