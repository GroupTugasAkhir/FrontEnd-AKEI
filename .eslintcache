[{"D:\\Portfolio\\grup5\\tugas_akhir\\FrontEnd-AKEI\\src\\reportWebVitals.js":"1","D:\\Portfolio\\grup5\\tugas_akhir\\FrontEnd-AKEI\\src\\pages\\cart\\Cart.jsx":"2","D:\\Portfolio\\grup5\\tugas_akhir\\FrontEnd-AKEI\\src\\pages\\Home.jsx":"3","D:\\Portfolio\\grup5\\tugas_akhir\\FrontEnd-AKEI\\src\\component\\card\\CardCustom.jsx":"4","D:\\Portfolio\\grup5\\tugas_akhir\\FrontEnd-AKEI\\src\\component\\HeaderAdmin.jsx":"5","D:\\Portfolio\\grup5\\tugas_akhir\\FrontEnd-AKEI\\src\\component\\header\\Header.jsx":"6","D:\\Portfolio\\grup5\\tugas_akhir\\FrontEnd-AKEI\\src\\App.js":"7","D:\\Portfolio\\grup5\\tugas_akhir\\FrontEnd-AKEI\\src\\pages\\Testing.jsx":"8","D:\\Portfolio\\grup5\\tugas_akhir\\FrontEnd-AKEI\\src\\pages\\admin\\branch_order.jsx":"9","D:\\Portfolio\\grup5\\tugas_akhir\\FrontEnd-AKEI\\src\\helpers\\creditValidation.jsx":"10","D:\\Portfolio\\grup5\\tugas_akhir\\FrontEnd-AKEI\\src\\pages\\admin\\branch_Request.jsx":"11","D:\\Portfolio\\grup5\\tugas_akhir\\FrontEnd-AKEI\\src\\index.js":"12","D:\\Portfolio\\grup5\\tugas_akhir\\FrontEnd-AKEI\\src\\pages\\detail_product\\DetailProduct.jsx":"13","D:\\Portfolio\\grup5\\tugas_akhir\\FrontEnd-AKEI\\src\\pages\\user_profile\\UserProfile.jsx":"14","D:\\Portfolio\\grup5\\tugas_akhir\\FrontEnd-AKEI\\src\\redux\\reducers\\index.js":"15","D:\\Portfolio\\grup5\\tugas_akhir\\FrontEnd-AKEI\\src\\helpers\\DateFormatter.jsx":"16","D:\\Portfolio\\grup5\\tugas_akhir\\FrontEnd-AKEI\\src\\redux\\actions\\AuthActions.js":"17","D:\\Portfolio\\grup5\\tugas_akhir\\FrontEnd-AKEI\\src\\helpers\\apiurl.jsx":"18","D:\\Portfolio\\grup5\\tugas_akhir\\FrontEnd-AKEI\\src\\pages\\admin\\admin_dashboard.jsx":"19","D:\\Portfolio\\grup5\\tugas_akhir\\FrontEnd-AKEI\\src\\component\\PieChart\\PieChart.jsx":"20"},{"size":375,"mtime":1606739584182,"results":"21","hashOfConfig":"22"},{"size":17763,"mtime":1607584433388,"results":"23","hashOfConfig":"22"},{"size":1911,"mtime":1607606559517,"results":"24","hashOfConfig":"22"},{"size":1511,"mtime":1607144803047,"results":"25","hashOfConfig":"22"},{"size":3243,"mtime":1607146782795,"results":"26","hashOfConfig":"22"},{"size":6885,"mtime":1607601784629,"results":"27","hashOfConfig":"22"},{"size":1777,"mtime":1607601871978,"results":"28","hashOfConfig":"22"},{"size":1931,"mtime":1606739725394,"results":"29","hashOfConfig":"22"},{"size":14570,"mtime":1607653234429,"results":"30","hashOfConfig":"22"},{"size":547,"mtime":1607146782797,"results":"31","hashOfConfig":"22"},{"size":6748,"mtime":1607652928127,"results":"32","hashOfConfig":"22"},{"size":962,"mtime":1606744015518,"results":"33","hashOfConfig":"22"},{"size":4622,"mtime":1607222012014,"results":"34","hashOfConfig":"22"},{"size":3375,"mtime":1607447823899,"results":"35","hashOfConfig":"22"},{"size":284,"mtime":1607584433426,"results":"36","hashOfConfig":"22"},{"size":586,"mtime":1607584433336,"results":"37","hashOfConfig":"22"},{"size":3186,"mtime":1607584433410,"results":"38","hashOfConfig":"22"},{"size":50,"mtime":1607078916851,"results":"39","hashOfConfig":"22"},{"size":1841,"mtime":1607661577684,"results":"40","hashOfConfig":"22"},{"size":1069,"mtime":1607661567660,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13fy07x",{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"51"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Portfolio\\grup5\\tugas_akhir\\FrontEnd-AKEI\\src\\reportWebVitals.js",[],"D:\\Portfolio\\grup5\\tugas_akhir\\FrontEnd-AKEI\\src\\pages\\cart\\Cart.jsx",["92","93","94","95"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport {Modal, ModalHeader, ModalBody, ModalFooter, CustomInput} from 'reactstrap'\r\nimport Header from './../../component/header/Header'\r\nimport './style.css'\r\nimport {priceFormatter, API_URL_SQL, credit} from './../../helpers'\r\nimport Axios from 'axios'\r\nimport {connect} from 'react-redux'\r\nimport Swal from 'sweetalert2'\r\nimport {findNearest} from 'geolib'\r\nimport Empty from './../../assets/empty.png'\r\nimport {ClearFunc} from './../../redux/actions'\r\n\r\n\r\n//testing\r\nimport testImg from './../../assets/mainregimg.jpg'\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.white,\r\n      color: theme.palette.common.black,\r\n    },\r\n  }))(TableCell);\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n      backgroundColor: 'white',\r\n      color: 'white'\r\n    },\r\n  });\r\n\r\nconst Cart = (props) => {\r\n    const isCancelled = useRef(false)\r\n    const classes = useStyles();\r\n    const [dataCart, setdataCart] = useState([])\r\n    const [payModal, setpayModal] = useState(false)\r\n    const [choiceMethod, setchoiceMethod] = useState(0)\r\n    const ccPay = useRef()\r\n    const [invoicePhoto, setinvoicePhoto] = useState(null)\r\n\r\n    const [dataLocation, setdataLocation] = useState([])\r\n    const [matchLoc, setmatchLoc] = useState({})\r\n    const [longlat, setlonglat] = useState('')\r\n    const [curloc, setcurloc] = useState(false)\r\n    const [inputloc, setinputloc] = useState(false)\r\n    const addressUser = useRef()\r\n    const [getinputuser, setgetinputuser] = useState(false)\r\n\r\n    useEffect(()=> {\r\n        getCartData()\r\n\r\n        return ()=> {\r\n            isCancelled.current = true\r\n        }\r\n    },[])\r\n\r\n    // useEffect(()=>{\r\n    //     console.log(dataCart)\r\n    // })\r\n\r\n    const getCartData = async () => {\r\n        try {\r\n            // const {data} = await Axios.get(`${API_URL_SQL}/cart/getCart/${props.Auth.user_id}`)\r\n            const {data} = await Axios.get(`${API_URL_SQL}/cart/getCart/${props.Auth.user_id}`)\r\n            if(!isCancelled.current) {\r\n                setdataCart(data.cartData)\r\n                console.log(data.cartData);\r\n                setdataLocation(data.locationData)\r\n                console.log(data.locationData);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    \r\n    //show current location start\r\n    const geoLocation = () => {\r\n        if(navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(showPosition)\r\n        } else {\r\n            alert('Geolocation is not supported by this browser.')\r\n        }\r\n    }\r\n    \r\n    const showPosition = (position) => {\r\n        let latitude = position.coords.latitude\r\n        let longitude = position.coords.longitude\r\n        setlonglat(`${latitude}` + `,${longitude}`)\r\n\r\n        const nearDist = findNearest({ latitude: latitude, longitude: longitude }, dataLocation);\r\n        setmatchLoc(nearDist)\r\n        console.log(nearDist);\r\n    }\r\n    //show current location end\r\n\r\n    //address from user input start\r\n\r\n    const getUserAddress = () => {\r\n        const userAddress = addressUser.current.value\r\n        Axios.get(`https://api.opencagedata.com/geocode/v1/json?`,{\r\n            params:{\r\n                key: 'cdeab36e4fec4073b0de60ff6b595c70',\r\n                q: userAddress\r\n            }\r\n        }).then((res)=> {\r\n            console.log(res.data.results[0]);\r\n            setlonglat(`${res.data.results[0].geometry.lat}` + `,${res.data.results[0].geometry.lng}`)\r\n            const nearDist = findNearest({ latitude: res.data.results[0].geometry.lat, longitude: res.data.results[0].geometry.lng }, dataLocation);\r\n            setmatchLoc(nearDist)\r\n            console.log(nearDist);\r\n            setgetinputuser(true)\r\n        }).catch(err=> {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    //address from user input end\r\n\r\n    const plusBtn = (ind) => {\r\n        const plusVar = [...dataCart]\r\n        plusVar[ind].quantity += 1\r\n        setdataCart(plusVar)\r\n\r\n        Axios.post(`${API_URL_SQL}/cart/updateCart`,plusVar[ind])\r\n        .then((res)=> {\r\n            console.log(res.data);\r\n        }).catch(err=> {\r\n            console.log(err.response.data.message);\r\n        })\r\n    }\r\n\r\n    const minBtn = (ind) => {\r\n        const minVar = [...dataCart]\r\n        minVar[ind].quantity -= 1\r\n        setdataCart(minVar)\r\n\r\n        if(minVar[ind].quantity < 1) {\r\n            let idData = {\r\n                idtrans: minVar[ind].idtrans,\r\n                idprod: minVar[ind].idprod,\r\n            }\r\n            minVar.splice(ind, 1)\r\n\r\n            Axios.post(`${API_URL_SQL}/cart/deleteCart`,idData)\r\n            .then((res)=> {\r\n                console.log(res.data);\r\n            }).catch(err=> {\r\n                console.log(err.response.data.message);\r\n            })\r\n        } else {\r\n            Axios.post(`${API_URL_SQL}/cart/updateCart`,minVar[ind])\r\n            .then((res)=> {\r\n                console.log(res.data);\r\n            }).catch(err=> {\r\n                console.log(err.response.data.message);\r\n            })\r\n        }\r\n    }\r\n\r\n    const renderTotalPrice = () => {\r\n        var total = dataCart.reduce((total, num)=> {\r\n            return total + (num.price * num.quantity)\r\n        }, 0)\r\n        return total\r\n    }\r\n\r\n    const oninputFileChange = (e) => {\r\n        if(e.target.files[0]) {\r\n            setinvoicePhoto(e.target.files[0])\r\n        } else {\r\n            setinvoicePhoto(null)\r\n        }\r\n      }\r\n\r\n    const onPayClick=()=>{\r\n        if(choiceMethod === '1') {\r\n            onPaywithInvoicePhoto()\r\n        } else if(choiceMethod === '2') {\r\n            if(credit(parseInt(ccPay.current.value))){\r\n                onPaywithCreditCard()\r\n            } else {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'Your credit card is not valid!',\r\n                  })\r\n            }\r\n        } else {\r\n            Swal.fire(\r\n                'Payment Methode?',\r\n                'Choose your payment methode first!',\r\n                'question'\r\n              )\r\n        }\r\n    }\r\n\r\n    const onPaywithInvoicePhoto = () => {\r\n        console.log(dataCart[0].idtrans);\r\n        console.log(invoicePhoto);\r\n        console.log(longlat);\r\n        console.log(matchLoc);\r\n\r\n        var formData = new FormData()\r\n        var options = {\r\n            headers: {\r\n                'Content-type':'multipart/form-data',\r\n            },\r\n        }\r\n\r\n        formData.append('invoice', invoicePhoto)\r\n        formData.append('datainvoice', JSON.stringify({\r\n            user_id: props.Auth.user_id,\r\n            idtrans: dataCart[0].idtrans,\r\n            notes: longlat,\r\n            matchLoc: matchLoc,\r\n            userCart: dataCart\r\n        }))\r\n        Axios.post(`${API_URL_SQL}/transaction/onpayinvoice`,formData,options)\r\n        .then((res)=> {\r\n            if(res.data === 'succeed') {\r\n                setdataCart([])\r\n                Swal.fire({\r\n                    position: 'top',\r\n                    icon: 'success',\r\n                    title: 'Thank you for buying with AKEI!',\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                  })\r\n                props.ClearFunc()\r\n                setpayModal(false)\r\n            }\r\n        }).catch((err)=> {\r\n            console.log(err.response.data.message);\r\n        })\r\n    }\r\n\r\n    const onPaywithCreditCard = () => {\r\n        console.log(dataCart[0].idtrans);\r\n        console.log(ccPay.current.value);\r\n        console.log(longlat);\r\n        console.log(matchLoc);\r\n\r\n        Axios.post(`${API_URL_SQL}/transaction/onpaycc`,{\r\n            user_id: props.Auth.user_id,\r\n            idtrans: dataCart[0].idtrans,\r\n            payment_proof: ccPay.current.value,\r\n            notes: longlat,\r\n            matchLoc: matchLoc,\r\n            userCart: dataCart\r\n        }).then((res)=> {\r\n            if(res.data === 'succeed') {\r\n                setdataCart([])\r\n                Swal.fire({\r\n                    position: 'top',\r\n                    icon: 'success',\r\n                    title: 'Thank you for buying with AKEI!',\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                  })\r\n                props.ClearFunc()\r\n                setpayModal(false)\r\n            }\r\n        }).catch((err)=> {\r\n            console.log(err.response.data.message);\r\n        })\r\n    }\r\n\r\n    const renderCart = () => {\r\n        return dataCart.map((val, ind)=> {\r\n            return (\r\n                <TableRow key={ind+1}>\r\n                    <TableCell style={{width: '100px'}}>\r\n                        <div className='cartimg'>\r\n                            <img style={{objectFit: 'contain', objectPosition: '50% 50%'}} width='100%' height='100%' src={API_URL_SQL + val.image} alt={val.product_name} />\r\n                        </div>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                        <div className='cart-words-prod'>\r\n                            {val.product_name}\r\n                        </div> \r\n                    </TableCell>\r\n                    <TableCell>\r\n                        <div className='cart-words'>\r\n                            {priceFormatter(val.price)}\r\n                        </div>\r\n                        </TableCell>\r\n                    <TableCell>\r\n                        <div className='d-flex'>\r\n                            <button className='qty-button-minus' onClick={()=>minBtn(ind)}>-</button>\r\n                            <div className='qty-area'>\r\n                                {val.quantity}\r\n                            </div>\r\n                            <button className='qty-button-plus' onClick={()=>plusBtn(ind)}>+</button>\r\n                        </div>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                        <div className='cart-words'>\r\n                            {priceFormatter(val.price*val.quantity)}\r\n                        </div>\r\n                    </TableCell>\r\n                </TableRow>            \r\n            )\r\n        })\r\n    }\r\n\r\n    const curlocationChange = () => {\r\n        setcurloc(true)\r\n        setinputloc(false)\r\n        geoLocation()\r\n    }\r\n\r\n    const inputlocationChange = () => {\r\n        setinputloc(true)\r\n        setcurloc(false)\r\n    }\r\n\r\n    const toggle = () => {\r\n        setpayModal(!payModal)\r\n        setinvoicePhoto(null)\r\n    }\r\n\r\n    if(dataCart===null){\r\n        return (\r\n            <div>Loading</div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal style={{marginTop:80}} isOpen={payModal} toggle={toggle}>\r\n                <ModalHeader toggle={toggle}>Payment</ModalHeader>\r\n                <ModalBody>\r\n                    <select onChange={(e)=> setchoiceMethod(e.target.value)} className='form-control' defaultValue={0} >\r\n                        <option value=\"0\" hidden>Choose your payment method</option>\r\n                        <option value=\"1\">Invoice Proof</option>\r\n                        <option value=\"2\">Credit Card</option>\r\n                    </select>\r\n                    {\r\n                       choiceMethod === '2'?\r\n                        <input type='number' className='form-control my-2' ref={ccPay} placeholder='input your credit card'/>\r\n                        :\r\n                       choiceMethod === '1'?\r\n                       <div>\r\n                           <CustomInput className='form-control my-2' onChange={oninputFileChange} type='file' label={invoicePhoto ? invoicePhoto.name : 'select invoice'} />\r\n                           {\r\n                               invoicePhoto?\r\n                               <div className='mt-2'>\r\n                                   <img src={URL.createObjectURL(invoicePhoto)} \r\n                                   height = '200' \r\n                                   width = '200' \r\n                                   alt = \"invoice\"/>\r\n                               </div>\r\n                               :\r\n                               null\r\n                           }\r\n                       </div>\r\n                        :\r\n                        null\r\n                    }\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <button onClick={onPayClick} className='checkout-button'>\r\n                        Bayar\r\n                    </button>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n            <Header style={{backgroundColor: '#72ceb8'}}/>\r\n            <div style={{marginTop: '80px', marginInline: '50px',marginLeft:'12vw',marginRight:'12vw'}} >\r\n                <div className='cartsection'>\r\n                    <div className='cart-left-side'>\r\n                        <Paper elevation={0}>\r\n                            <TableContainer>\r\n                                {\r\n                                    dataCart.length?\r\n                                    <Table stickyHeader className={classes.table}>\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <StyledTableCell colSpan='2'>Product</StyledTableCell>\r\n                                                <StyledTableCell>Price</StyledTableCell>\r\n                                                <StyledTableCell>Quantity</StyledTableCell>\r\n                                                <StyledTableCell>Total</StyledTableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {\r\n                                                renderCart()\r\n                                            }\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                    :\r\n                                    <div className=\"d-flex align-items-center justify-content-center flex-column\" style={{overflow:'hidden'}}>\r\n                                        <img src={Empty} alt=\"\" style={{width:'400px', height:'400px',objectFit:'contain'}}/>\r\n                                        <h4>Your cart is still empty</h4>\r\n                                    </div>\r\n                                }\r\n                            </TableContainer>\r\n                        </Paper>\r\n                    </div>\r\n                    <div className='cart-right-side'>\r\n                        <div className='cart-right-side-section'>\r\n                            <div className='right-top-side'>\r\n                                <div style={{padding: '10px'}}>\r\n                                    <h4>Order Summary</h4>\r\n                                    <p style={{color: 'gray'}}>lorem ipsum</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className='right-bottom-side'>\r\n                                <div className='checkout-side'>\r\n                                    <div>\r\n                                        <div style={{color: 'gray'}}>Total Price</div>\r\n                                        <div>{priceFormatter(renderTotalPrice())}</div>\r\n                                    </div>\r\n                                    {\r\n                                        curloc || getinputuser ?\r\n\r\n                                        <button onClick={()=> setpayModal(true)} className='checkout-button'>Checkout</button>\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            {\r\n                                dataCart.length?\r\n                                <>\r\n                                    <div className='d-flex justify-content-center align-items-center'>\r\n                                        <h5 className='mb-2 mt-5'>Choose Payment Address</h5>\r\n                                    </div>\r\n                                    <div onClick={curlocationChange} className={curloc?'location-change':'current-location'}>\r\n                                        Using current location\r\n                                    </div>\r\n                                    <div className={inputloc?'location-change':'input-location'}>\r\n                                        <input onClick={inputlocationChange} ref={addressUser} type=\"text\" placeholder='input your address'/>\r\n                                        <button className='getbutton' onClick={getUserAddress}>Get</button>\r\n                                    </div>\r\n                                </>\r\n                                :\r\n                                null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst Mapstatetoprops = (state) => {\r\n    return {\r\n        Auth: state.Auth\r\n    }\r\n}\r\n\r\nexport default connect(Mapstatetoprops,{ClearFunc})(Cart)",["96","97"],"D:\\Portfolio\\grup5\\tugas_akhir\\FrontEnd-AKEI\\src\\pages\\Home.jsx",["98"],"import React from 'react';\r\nimport Header from '../component/header/Header';\r\nimport './style.css'\r\nimport Intro from './../assets/intro.png'\r\nimport NewArrival from './new_arrival/NewArrival'\r\nimport BestProduct from './best_product/BestProduct';\r\nimport Product from './product/Product';\r\nimport Footer from '../component/footer/Footer';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Home=(props)=>{\r\n\r\n    // if(props.Auth.isLogin){\r\n    //     if(props.role !== 1){\r\n    //         return <Redirect to='/admin'/>\r\n    //     }\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <section className='home-section'>\r\n                <div className=\"home-left-side\">\r\n                    <div className=\"home-title-box\">\r\n                        <h2>Good Living <br/> Better <span style={{color:'#64dfdf'}}>Live</span></h2>\r\n                        <p>Lorem ipsum dolor, sit amet consectetur adipisicing elit. Tempore eos, explicabo sapiente ipsa minus aperiam!</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"home-right-side\">\r\n                    <div className=\"white-line l-1\"/>\r\n                    <div className=\"white-line l-2\"/>\r\n                    <div className=\"white-line l-3\"/>\r\n                    <div className=\"home-img\">\r\n                        <img src={Intro} alt=\"\"/>\r\n                    </div>\r\n                    <div className=\"home-img-text\">\r\n                        <span>FRIHETEN <br/> Corner sofa-bed with storage</span>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <NewArrival/>\r\n            <BestProduct/>\r\n            <Product/>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Mapstatetoprops = (state) => {\r\n    return {\r\n      Auth: state.Auth\r\n    }\r\n}\r\n\r\nexport default connect(Mapstatetoprops)(Home)",["99","100"],"D:\\Portfolio\\grup5\\tugas_akhir\\FrontEnd-AKEI\\src\\component\\card\\CardCustom.jsx",["101"],"import React, { useState } from 'react';\r\nimport './style.css'\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport { priceFormatter } from '../../helpers/priceFormatter';\r\nimport { API_URL_SQL } from '../../helpers/apiurl';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CardCustom=(props)=>{\r\n\r\n    const [dataCatalog,setDataCatalog] = useState(props.catalog)\r\n\r\n    const renderCatalog=()=>{\r\n        return dataCatalog.map((val,index)=>{\r\n            return (\r\n                <div className=\"card-box\">\r\n                    <div className=\"cart-icon\">\r\n                        <Link to={\"/detailproduct/\"+val.product_id}>\r\n                            <AddShoppingCartIcon fontSize=\"small\"/>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"card-text\">\r\n                        <div className=\"card-title\">\r\n                            <h6>{val.product_name}</h6>\r\n                        </div>\r\n                        <div className=\"card-price\">\r\n                            {priceFormatter(val.price)}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-img\">\r\n                        <img src={API_URL_SQL+val.image} alt=\"\"/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    if(dataCatalog===null){\r\n        return (\r\n            <div>Loading</div>\r\n        )\r\n    }\r\n\r\n    return renderCatalog()\r\n}\r\n\r\nexport default CardCustom","D:\\Portfolio\\grup5\\tugas_akhir\\FrontEnd-AKEI\\src\\component\\HeaderAdmin.jsx",["102","103","104","105","106","107","108","109"],"D:\\Portfolio\\grup5\\tugas_akhir\\FrontEnd-AKEI\\src\\component\\header\\Header.jsx",["110","111","112","113","114"],"D:\\Portfolio\\grup5\\tugas_akhir\\FrontEnd-AKEI\\src\\App.js",["115","116"],"import React, { Component, useEffect } from 'react';\r\nimport { Switch,Route } from 'react-router-dom'\r\nimport Home from './pages/Home'\r\nimport Login from './pages/auth/login/Login'\r\nimport Register from './pages/auth/register/Register'\r\nimport Verified from './pages/verified/Verified'\r\nimport Cart from './pages/cart/Cart'\r\nimport DetailProduct from './pages/detail_product/DetailProduct'\r\nimport Testing from './pages/Testing'\r\nimport Admin from './pages/admin/admin'\r\nimport UserProfile from './pages/user_profile/UserProfile'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nimport {connect} from 'react-redux'\r\nimport {KeepLogin, CartThunk} from './redux/actions'\r\n\r\nfunction App(props) {\r\n  useEffect(()=> {\r\n    let datauser = localStorage.getItem('user')\r\n    if(datauser) {\r\n      props.KeepLogin()\r\n      // props.CartThunk(props.Auth.user_id)\r\n    }\r\n  },[])\r\n\r\n  if(props.Auth.isLoading) {\r\n    return (\r\n      <div>\r\n        LOADING\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route exact path='/' component={Home}/>\r\n        <Route exact path='/login' component={Login}/>\r\n        <Route exact path='/register' component={Register}/>\r\n        <Route exact path='/verified' component={Verified} />\r\n        <Route exact path='/detailproduct/:id' component={DetailProduct} />\r\n        <Route exact path='/cart' component={Cart} />\r\n        <Route exact path='/test' component={Testing}/>\r\n        <Route exact path='/admin' component={Admin}/>\r\n        <Route exact path='/userprofile' component={UserProfile}/>\r\n      </Switch>      \r\n    </div>\r\n  );\r\n}\r\n\r\nconst Mapstatetoprops = (state) => {\r\n  return {\r\n    Auth: state.Auth,\r\n    Cart: state.Cart\r\n  }\r\n}\r\n\r\nexport default connect(Mapstatetoprops,{KeepLogin,CartThunk}) (App);\r\n","D:\\Portfolio\\grup5\\tugas_akhir\\FrontEnd-AKEI\\src\\pages\\Testing.jsx",[],"D:\\Portfolio\\grup5\\tugas_akhir\\FrontEnd-AKEI\\src\\pages\\admin\\branch_order.jsx",["117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141"],"import React, { useEffect, useState } from 'react';\r\nimport './admin.css'\r\nimport Header from './../../component/HeaderAdmin'\r\nimport { Table, \r\n    Pagination, \r\n    PaginationItem, \r\n    PaginationLink,\r\n    Button, \r\n    Modal, \r\n    ModalHeader, \r\n    ModalBody, \r\n    ModalFooter, \r\n    CustomInput\r\n} from 'reactstrap';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport ButtonUI from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableUI from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {TableFooter} from '@material-ui/core'\r\nimport { \r\n    CameraAltOutlined, \r\n    Settings \r\n} from '@material-ui/icons';\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport Axios from 'axios';\r\nimport { API_URL_SQL } from '../../helpers';\r\nimport {connect} from 'react-redux'\r\nimport {ModalChange} from './../../redux/actions'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    padding: {\r\n      padding: theme.spacing(1),\r\n    },\r\n    demo1: {\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    demo2: {\r\n      backgroundColor: '#2e1534',\r\n    },\r\n    typography: {\r\n      padding: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst TransactionLog = (props) => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = useState(0);\r\n    const [page, setPages] = useState(1)\r\n    const [showProd, setShowProd] = useState(1)\r\n    const [modal, setModal] = useState(false)\r\n    const [modalRequest, setModalRequest] = useState(false)\r\n    const [modalTracking, setModalTracking] = useState(false)\r\n    const [data,setData] = useState(null)\r\n    const [trxData,setTrxData] = useState([])\r\n    const [onPackage,setOnPackage] = useState([])\r\n    const [onWaiting,setOnWaiting] = useState([])\r\n    const [isValid,setIsValid] = useState(0)\r\n    const [trxId,setTrxId] = useState(0)\r\n\r\n    useEffect(()=>{\r\n        if(props.Auth.isLogin){\r\n            let getLocation = JSON.parse(localStorage.getItem('user'))\r\n            Axios.get(`${API_URL_SQL}/notification/gettransaction/${getLocation.notes}`)\r\n            .then((res)=>{\r\n                setData(res.data)\r\n            }).catch((err)=>console.log(err))\r\n        }\r\n    })\r\n\r\n    useEffect(()=> {\r\n        if(props.Admin.adminData !== '') {    \r\n            console.log(props.Admin.adminData);\r\n            getTransactionDetail(props.Admin.adminData)\r\n        }\r\n    },[props.Admin.adminData])\r\n\r\n    const MySwal = withReactContent(Swal)\r\n\r\n    const swalWithBootstrapButtons = Swal.mixin({\r\n        customClass: {\r\n          confirmButton: 'btn btn-success',\r\n          cancelButton: 'btn btn-danger'\r\n        },\r\n        buttonsStyling: false\r\n    })\r\n\r\n    const toggle = () => setModal(!modal);\r\n    const toggleRequest = () => setModalRequest(!modalRequest);\r\n    const toggleTracking = () => setModalTracking(!modalTracking);\r\n\r\n    const transactionModal = (trxid) => {\r\n        localStorage.setItem('trxID', JSON.stringify(trxid))\r\n        checkSendButton(trxid)\r\n        getTransactionDetail(trxid)\r\n        setTrxId(trxid)\r\n    }\r\n\r\n    const renderTable=()=>{\r\n        return data.map((val, index)=>(\r\n            <tr key={index} style={{textTransform:'capitalize'}}>\r\n                <th style={{display:'flex', justifyContent:'center', alignItems:'center'}}>{index+1}</th>\r\n                <td>{val.username}</td>\r\n                <td>{val.date_in}</td>\r\n                <td>{val.status}</td>\r\n                <td className='to-hover' onClick={()=>transactionModal(val.transaction_id)}><Settings/></td>\r\n            </tr>\r\n      ))\r\n    }\r\n\r\n    const getTransactionDetail=(id)=>{\r\n        let getLocation = JSON.parse(localStorage.getItem('user'))\r\n        console.log(id)\r\n        console.log(getLocation.notes)\r\n        let obj = {\r\n            location_id : getLocation.notes,\r\n            transaction_id : id\r\n        }\r\n        Axios.post(`${API_URL_SQL}/notification/gettransactiondetail`,obj)\r\n        .then((res)=>{\r\n            setTrxData(res.data[0])\r\n            setOnPackage(res.data[1])\r\n            setOnWaiting(res.data[2])\r\n            setModalTracking(true)\r\n        }).catch((err)=>console.log(err))\r\n    }\r\n\r\n    const confirmItem=(prod_id,qty,trx_detail)=>{\r\n        let getLocation = JSON.parse(localStorage.getItem('user'))\r\n        Axios.post(`${API_URL_SQL}/notification/confirmUserRequest`,{\r\n            product_id : prod_id,\r\n            mod_qty : qty,\r\n            trx_detail_id : trx_detail,\r\n            location_id : getLocation.notes\r\n        }).then(()=>{\r\n            console.log('sukses oi')\r\n            let transacID = localStorage.getItem('trxID')\r\n            props.ModalChange(transacID)\r\n        }).catch((err)=>console.log(err))        \r\n    }\r\n\r\n    const requestItem=(id,qty,trx_detail,location,notif_id)=>{\r\n        Axios.post(`${API_URL_SQL}/notification/requestHandling`,{\r\n            location_id : location,\r\n            product_id : id,\r\n            req_quantity : qty,\r\n            transaction_detail_id : trx_detail,\r\n            notification_id : notif_id\r\n        }).then(()=>{\r\n            console.log('sukses oi')\r\n            let transacID = localStorage.getItem('trxID')\r\n            props.ModalChange(transacID)\r\n        }).catch((err)=>console.log(err))\r\n    }\r\n\r\n    const checkSendButton=(trx_id)=>{\r\n        Axios.get(`${API_URL_SQL}/notification/checkitem/${trx_id}`)\r\n        .then((res)=>{\r\n            console.log(res.data)\r\n            setIsValid(res.data)\r\n        }).catch((err)=>console.log(err))\r\n    }\r\n\r\n    const sendItem=()=>{\r\n        console.log(trxId)\r\n        Axios.post(`${API_URL_SQL}/notification/senditem/${trxId}`)\r\n        .then(()=>{\r\n            console.log('item send')\r\n            toggleTracking()\r\n        }).catch((err)=>console.log(err))\r\n    }\r\n\r\n    const renderTrackingDetail=()=>(\r\n        <Paper >\r\n            <TableContainer >\r\n                <TableUI stickyHeader aria-label=\"sticky table\">\r\n                    {\r\n                        trxData.length?\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>No.</TableCell>\r\n                                <TableCell>Image</TableCell>\r\n                                <TableCell>Product</TableCell>\r\n                                <TableCell>Order Qty</TableCell>\r\n                                <TableCell>Stock</TableCell>\r\n                                <TableCell>Status</TableCell>\r\n                                <TableCell>Action</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        :\r\n                        null\r\n                    }\r\n                    <TableBody>\r\n                        {renderTrackingDetailTableBody()}\r\n                    </TableBody>\r\n                    {\r\n                        onPackage.length?\r\n                        <TableHead>\r\n                            <h6 className='mt-3'>Confirmed</h6>\r\n                            <TableRow>\r\n                                <TableCell>No.</TableCell>\r\n                                <TableCell>Image</TableCell>\r\n                                <TableCell>Product</TableCell>\r\n                                <TableCell>Order Qty</TableCell>\r\n                                <TableCell>Status</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        :\r\n                        null\r\n                    }\r\n                    <TableBody>\r\n                        {onPackage.length? renderOnPackage() : null}\r\n                    </TableBody>\r\n                    {\r\n                        onWaiting.length?\r\n                        <TableHead>\r\n                            <h6 className='mt-3'>Waiting Confirmation</h6>\r\n                            <TableRow>\r\n                                <TableCell>No.</TableCell>\r\n                                <TableCell>Image</TableCell>\r\n                                <TableCell>Product</TableCell>\r\n                                <TableCell>Status</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        :\r\n                        null\r\n                    }\r\n                    <TableBody>\r\n                        {onPackage.length || onWaiting.length? renderOnWaiting() : null}\r\n                    </TableBody>\r\n                </TableUI>\r\n            </TableContainer>\r\n        </Paper>\r\n    )\r\n\r\n    const renderTrackingDetailTableBody=()=>{\r\n        let getLocation = JSON.parse(localStorage.getItem('user'))\r\n        return trxData.map((val, index)=>(\r\n            <TableRow key={index}>\r\n                <TableCell>{index+1}</TableCell>\r\n                <TableCell >\r\n                    <div style={{maxWidth:'100px'}}>\r\n                        <img width='100%' height='100%'  src={API_URL_SQL+val.image}/>\r\n                    </div>\r\n                </TableCell>\r\n                <TableCell>{val.product_name}</TableCell>\r\n                <TableCell>{val.req_qty}</TableCell>\r\n                <TableCell>{val.stock}</TableCell>\r\n                <TableCell>{val.req_qty <= val.stock? 'ready' : 'insufficient'}</TableCell>\r\n                {\r\n                    val.req_qty <= val.stock?\r\n                    <TableCell className='to-hover'>\r\n                        <button className='btn btn-outline-info mr-3' onClick={()=>confirmItem(val.product_id, val.req_qty,val.transaction_detail_id)}>Confirm</button>\r\n                    </TableCell>\r\n                    :\r\n                    <TableCell className='to-hover'>\r\n                        <button className='btn btn-outline-success mr-3' onClick={()=>requestItem(val.product_id, val.req_qty,val.transaction_detail_id,getLocation.notes,val.notification_id)}>Request</button>\r\n                    </TableCell>\r\n                }\r\n            </TableRow>\r\n        ))\r\n    }\r\n\r\n    const renderOnPackage=()=>{\r\n        return onPackage.map((val, index)=>(\r\n            <TableRow key={index}>\r\n                <TableCell>{index+1}</TableCell>\r\n                <TableCell >\r\n                    <div style={{maxWidth:'100px'}}>\r\n                        <img width='100%' height='100%'  src={API_URL_SQL+val.image}/>\r\n                    </div>\r\n                </TableCell>\r\n                <TableCell>{val.product_name}</TableCell>\r\n                <TableCell>{val.req_qty}</TableCell>\r\n                <TableCell>onPackaging</TableCell>\r\n            </TableRow>\r\n        ))\r\n    }\r\n\r\n    const renderOnWaiting=()=>{\r\n        return onWaiting.map((val, index)=>(\r\n            <TableRow key={index}>\r\n                <TableCell>{index+1}</TableCell>\r\n                <TableCell >\r\n                    <div style={{maxWidth:'100px'}}>\r\n                        <img width='100%' height='100%'  src={API_URL_SQL+val.image}/>\r\n                    </div>\r\n                </TableCell>\r\n                <TableCell>{val.product_name}</TableCell>\r\n                <TableCell>onWaiting from another branch</TableCell>\r\n            </TableRow>\r\n        ))\r\n    }\r\n\r\n    if(data===null){\r\n        return (\r\n            <div>Loading</div>\r\n        )\r\n    }\r\n    \r\n    return ( \r\n        <div style={{paddingTop:10}}>\r\n\r\n            {/* Modal untuk tracking transaksi dari user */}\r\n            <Modal isOpen={modalTracking} toggle={toggleTracking} size='xl'>\r\n                <ModalHeader toggle={toggleTracking}>Tracking Transaction Quantity</ModalHeader>\r\n                <ModalBody>\r\n                    {renderTrackingDetail()}\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <div className='modal_footer_tracking'>\r\n                        {\r\n                            isValid?\r\n                            <button className='btn btn-outline-info mr-3' onClick={sendItem}>Send</button>\r\n                            :\r\n                            null\r\n                        }\r\n                        <button className=\"btn btn-outline-primary\" onClick={toggleTracking}>back</button>\r\n                    </div>\r\n                </ModalFooter>\r\n            </Modal>\r\n            {/* Render component */}\r\n            <Table>\r\n                <thead>\r\n                    <tr>\r\n                        <th></th>\r\n                        <th>Username</th>\r\n                        <th>Date</th>\r\n                        <th>Status</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {renderTable()}\r\n                </tbody>\r\n            </Table>\r\n            <div className='table_footer'>\r\n            <Pagination aria-label=\"Page navigation example\">\r\n                <PaginationItem>\r\n                    <PaginationLink first href=\"#\" />\r\n                </PaginationItem>\r\n                <PaginationItem>\r\n                    <PaginationLink previous href=\"#\" />\r\n                </PaginationItem>\r\n                <PaginationItem>\r\n                    <PaginationLink href=\"#\">\r\n                    1\r\n                    </PaginationLink>\r\n                </PaginationItem>\r\n                <PaginationItem>\r\n                    <PaginationLink href=\"#\">\r\n                    2\r\n                    </PaginationLink>\r\n                </PaginationItem>\r\n                <PaginationItem>\r\n                    <PaginationLink href=\"#\">\r\n                    3\r\n                    </PaginationLink>\r\n                </PaginationItem>\r\n                <PaginationItem>\r\n                    <PaginationLink next href=\"#\" />\r\n                </PaginationItem>\r\n                <PaginationItem>\r\n                    <PaginationLink last href=\"#\" />\r\n                </PaginationItem>\r\n            </Pagination>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n\r\nconst Mapstatetoprops = (state) => {\r\n    return {\r\n        Auth : state.Auth,\r\n        Admin: state.Admin\r\n    }\r\n}\r\n\r\nexport default connect(Mapstatetoprops,{ModalChange})(TransactionLog);",["142","143"],"D:\\Portfolio\\grup5\\tugas_akhir\\FrontEnd-AKEI\\src\\helpers\\creditValidation.jsx",["144","145"],"export function credit(input) {\r\n    var angka = 0\r\n    var output = 0\r\n    var  y= input\r\n    var a\r\n    do {\r\n        a = y%(10)\r\n        var b\r\n        y = (y-a)/10\r\n        if(angka%2==1){\r\n            a*=2\r\n            if(a>9 ){\r\n                b = a%10\r\n                output += (b+1)\r\n            } else {\r\n                output += a\r\n            }\r\n        } else {\r\n            output += a\r\n        }\r\n        angka++\r\n    } while (y > 0);\r\n\r\n    if(output%10 == 0) {\r\n      return true\r\n    } else {\r\n        return false\r\n    } \r\n  }","D:\\Portfolio\\grup5\\tugas_akhir\\FrontEnd-AKEI\\src\\pages\\admin\\branch_Request.jsx",["146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161"],"D:\\Portfolio\\grup5\\tugas_akhir\\FrontEnd-AKEI\\src\\index.js",[],"D:\\Portfolio\\grup5\\tugas_akhir\\FrontEnd-AKEI\\src\\pages\\detail_product\\DetailProduct.jsx",["162"],"import React, { useEffect, useState } from 'react';\r\nimport Header from './../../component/header/Header'\r\nimport './style.css'\r\nimport { priceFormatter } from '../../helpers/priceFormatter';\r\nimport { API_URL_SQL } from '../../helpers/apiurl';\r\nimport Axios from 'axios'\r\nimport {connect} from 'react-redux'\r\nimport {CartThunk} from './../../redux/actions/CartAction'\r\n\r\nconst DetailProduct = (props) => {\r\n    const {match} = props\r\n    let {id} = match.params\r\n    \r\n    const [qtyproduct, setqtyproduct] = useState(0)\r\n    const [detailProd,setDetailProd] = useState(null)\r\n    const plusBtn = () => {\r\n        let newQty = qtyproduct\r\n        newQty++\r\n        setqtyproduct(newQty)\r\n    }\r\n\r\n    const minBtn = () => {\r\n        let newQty = qtyproduct\r\n        newQty--\r\n        setqtyproduct(newQty)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        Axios.get(`${API_URL_SQL}/admin/getproduct/${id}`)\r\n        .then((res)=>{\r\n            setDetailProd(res.data[0])\r\n        }).catch((err)=>console.log(err))\r\n    },[])\r\n\r\n    const addToCart=()=>{\r\n        if(qtyproduct){\r\n            let obj = {\r\n                user_id: props.Auth.user_id,\r\n                product_id : id,\r\n                quantity : qtyproduct\r\n            }\r\n            Axios.post(`${API_URL_SQL}/cart/getTrx`,obj)\r\n            .then(()=>{\r\n                props.CartThunk(props.Auth.user_id)\r\n            }).catch((err)=>console.log(err))\r\n        }\r\n    }\r\n\r\n    \r\n    if(detailProd===null){\r\n        return (\r\n            <div>Loading</div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header style={{backgroundColor: '#72ceb8'}}/>\r\n            <div className='mainsection'>\r\n                <div className='detailsection'>\r\n                    <div className='det-left-side'>\r\n                        <div className='det-img'>\r\n                            <img src={API_URL_SQL+detailProd.image} style={{objectFit: 'cover', objectPosition: '50% 50%'}} width='100%' height='100%' alt=\"productimg\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className='det-right-side'>\r\n                        <div className='inside-right-side'>\r\n                            <div className='categ-product'>\r\n                                <div className='categ-product-title'>\r\n                                    {detailProd.category_name}\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <div className='product-title'>\r\n                                    {detailProd.product_name}\r\n                                </div>\r\n                                <div className='product-desc'>\r\n                                    {detailProd.description}\r\n                                </div>\r\n                            </div>\r\n                            <div className='product-qty-section'>\r\n                                <div className='qty-side'>\r\n                                    <div className='qty-title'>\r\n                                        QUANTITY\r\n                                    </div>\r\n                                    <div className='d-flex mt-1'>\r\n                                        {\r\n                                            qtyproduct < 1?\r\n                                            <button className='qty-button-minus' style={{backgroundColor:'#e5e5e5'}} disabled>-</button>\r\n                                            :\r\n                                            <button className='qty-button-minus' onClick={()=>minBtn()}>-</button>\r\n                                        }\r\n                                        <div className='qty-area'>\r\n                                            {qtyproduct}\r\n                                        </div>\r\n                                        <button className='qty-button-plus' onClick={()=>plusBtn()}>+</button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='price-side'>\r\n                                    {priceFormatter(detailProd.price)}\r\n                                </div>\r\n                            </div>\r\n                            <button className='addcart-button' onClick={addToCart}>Add to Cart</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst ReduxProps=(state)=>{\r\n    return{\r\n        Auth:state.Auth,\r\n        Cart:state.Cart\r\n    }\r\n}\r\n\r\nexport default connect(ReduxProps,{CartThunk})(DetailProduct)","D:\\Portfolio\\grup5\\tugas_akhir\\FrontEnd-AKEI\\src\\pages\\user_profile\\UserProfile.jsx",[],"D:\\Portfolio\\grup5\\tugas_akhir\\FrontEnd-AKEI\\src\\redux\\reducers\\index.js",[],"D:\\Portfolio\\grup5\\tugas_akhir\\FrontEnd-AKEI\\src\\helpers\\DateFormatter.jsx",[],"D:\\Portfolio\\grup5\\tugas_akhir\\FrontEnd-AKEI\\src\\redux\\actions\\AuthActions.js",[],"D:\\Portfolio\\grup5\\tugas_akhir\\FrontEnd-AKEI\\src\\helpers\\apiurl.jsx",[],"D:\\Portfolio\\grup5\\tugas_akhir\\FrontEnd-AKEI\\src\\pages\\admin\\admin_dashboard.jsx",["163"],"D:\\Portfolio\\grup5\\tugas_akhir\\FrontEnd-AKEI\\src\\component\\PieChart\\PieChart.jsx",["164","165"],{"ruleId":"166","severity":1,"message":"167","line":23,"column":8,"nodeType":"168","messageId":"169","endLine":23,"endColumn":15},{"ruleId":"170","severity":1,"message":"171","line":62,"column":7,"nodeType":"172","endLine":62,"endColumn":9,"suggestions":"173"},{"ruleId":"174","severity":1,"message":"175","line":95,"column":34,"nodeType":"176","messageId":"177","endLine":95,"endColumn":35},{"ruleId":"174","severity":1,"message":"175","line":114,"column":62,"nodeType":"176","messageId":"177","endLine":114,"endColumn":63},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"166","severity":1,"message":"182","line":10,"column":10,"nodeType":"168","messageId":"169","endLine":10,"endColumn":18},{"ruleId":"178","replacedBy":"183"},{"ruleId":"180","replacedBy":"184"},{"ruleId":"166","severity":1,"message":"185","line":10,"column":24,"nodeType":"168","messageId":"169","endLine":10,"endColumn":38},{"ruleId":"166","severity":1,"message":"186","line":12,"column":23,"nodeType":"168","messageId":"169","endLine":12,"endColumn":38},{"ruleId":"166","severity":1,"message":"187","line":16,"column":8,"nodeType":"168","messageId":"169","endLine":16,"endColumn":24},{"ruleId":"166","severity":1,"message":"188","line":17,"column":8,"nodeType":"168","messageId":"169","endLine":17,"endColumn":11},{"ruleId":"166","severity":1,"message":"189","line":18,"column":8,"nodeType":"168","messageId":"169","endLine":18,"endColumn":15},{"ruleId":"166","severity":1,"message":"190","line":19,"column":8,"nodeType":"168","messageId":"169","endLine":19,"endColumn":18},{"ruleId":"166","severity":1,"message":"191","line":19,"column":22,"nodeType":"168","messageId":"169","endLine":19,"endColumn":33},{"ruleId":"166","severity":1,"message":"192","line":19,"column":35,"nodeType":"168","messageId":"169","endLine":19,"endColumn":46},{"ruleId":"166","severity":1,"message":"193","line":39,"column":7,"nodeType":"168","messageId":"169","endLine":39,"endColumn":18},{"ruleId":"166","severity":1,"message":"194","line":1,"column":38,"nodeType":"168","messageId":"169","endLine":1,"endColumn":44},{"ruleId":"166","severity":1,"message":"182","line":6,"column":15,"nodeType":"168","messageId":"169","endLine":6,"endColumn":23},{"ruleId":"170","severity":1,"message":"195","line":25,"column":7,"nodeType":"172","endLine":25,"endColumn":9,"suggestions":"196"},{"ruleId":"170","severity":1,"message":"197","line":29,"column":7,"nodeType":"172","endLine":29,"endColumn":30,"suggestions":"198"},{"ruleId":"166","severity":1,"message":"199","line":48,"column":11,"nodeType":"168","messageId":"169","endLine":48,"endColumn":20},{"ruleId":"166","severity":1,"message":"200","line":1,"column":17,"nodeType":"168","messageId":"169","endLine":1,"endColumn":26},{"ruleId":"170","severity":1,"message":"201","line":24,"column":5,"nodeType":"172","endLine":24,"endColumn":7,"suggestions":"202"},{"ruleId":"166","severity":1,"message":"203","line":3,"column":8,"nodeType":"168","messageId":"169","endLine":3,"endColumn":14},{"ruleId":"166","severity":1,"message":"204","line":8,"column":5,"nodeType":"168","messageId":"169","endLine":8,"endColumn":11},{"ruleId":"166","severity":1,"message":"205","line":13,"column":5,"nodeType":"168","messageId":"169","endLine":13,"endColumn":16},{"ruleId":"166","severity":1,"message":"206","line":15,"column":22,"nodeType":"168","messageId":"169","endLine":15,"endColumn":32},{"ruleId":"166","severity":1,"message":"207","line":16,"column":8,"nodeType":"168","messageId":"169","endLine":16,"endColumn":12},{"ruleId":"166","severity":1,"message":"208","line":17,"column":8,"nodeType":"168","messageId":"169","endLine":17,"endColumn":11},{"ruleId":"166","severity":1,"message":"209","line":18,"column":8,"nodeType":"168","messageId":"169","endLine":18,"endColumn":18},{"ruleId":"166","severity":1,"message":"189","line":19,"column":8,"nodeType":"168","messageId":"169","endLine":19,"endColumn":15},{"ruleId":"166","severity":1,"message":"210","line":20,"column":8,"nodeType":"168","messageId":"169","endLine":20,"endColumn":16},{"ruleId":"166","severity":1,"message":"211","line":28,"column":9,"nodeType":"168","messageId":"169","endLine":28,"endColumn":20},{"ruleId":"166","severity":1,"message":"212","line":30,"column":5,"nodeType":"168","messageId":"169","endLine":30,"endColumn":22},{"ruleId":"166","severity":1,"message":"213","line":59,"column":11,"nodeType":"168","messageId":"169","endLine":59,"endColumn":18},{"ruleId":"166","severity":1,"message":"214","line":60,"column":12,"nodeType":"168","messageId":"169","endLine":60,"endColumn":17},{"ruleId":"166","severity":1,"message":"215","line":60,"column":19,"nodeType":"168","messageId":"169","endLine":60,"endColumn":27},{"ruleId":"166","severity":1,"message":"216","line":61,"column":12,"nodeType":"168","messageId":"169","endLine":61,"endColumn":16},{"ruleId":"166","severity":1,"message":"217","line":61,"column":18,"nodeType":"168","messageId":"169","endLine":61,"endColumn":26},{"ruleId":"166","severity":1,"message":"218","line":62,"column":12,"nodeType":"168","messageId":"169","endLine":62,"endColumn":20},{"ruleId":"166","severity":1,"message":"219","line":62,"column":22,"nodeType":"168","messageId":"169","endLine":62,"endColumn":33},{"ruleId":"166","severity":1,"message":"220","line":90,"column":11,"nodeType":"168","messageId":"169","endLine":90,"endColumn":17},{"ruleId":"166","severity":1,"message":"221","line":92,"column":11,"nodeType":"168","messageId":"169","endLine":92,"endColumn":35},{"ruleId":"166","severity":1,"message":"222","line":100,"column":11,"nodeType":"168","messageId":"169","endLine":100,"endColumn":17},{"ruleId":"166","severity":1,"message":"223","line":101,"column":11,"nodeType":"168","messageId":"169","endLine":101,"endColumn":24},{"ruleId":"224","severity":1,"message":"225","line":255,"column":25,"nodeType":"226","endLine":255,"endColumn":87},{"ruleId":"224","severity":1,"message":"225","line":282,"column":25,"nodeType":"226","endLine":282,"endColumn":87},{"ruleId":"224","severity":1,"message":"225","line":298,"column":25,"nodeType":"226","endLine":298,"endColumn":87},{"ruleId":"178","replacedBy":"227"},{"ruleId":"180","replacedBy":"228"},{"ruleId":"229","severity":1,"message":"230","line":10,"column":19,"nodeType":"176","messageId":"231","endLine":10,"endColumn":21},{"ruleId":"229","severity":1,"message":"230","line":24,"column":18,"nodeType":"176","messageId":"231","endLine":24,"endColumn":20},{"ruleId":"166","severity":1,"message":"232","line":7,"column":5,"nodeType":"168","messageId":"169","endLine":7,"endColumn":10},{"ruleId":"166","severity":1,"message":"233","line":8,"column":5,"nodeType":"168","messageId":"169","endLine":8,"endColumn":16},{"ruleId":"166","severity":1,"message":"234","line":9,"column":5,"nodeType":"168","messageId":"169","endLine":9,"endColumn":14},{"ruleId":"166","severity":1,"message":"235","line":10,"column":5,"nodeType":"168","messageId":"169","endLine":10,"endColumn":16},{"ruleId":"166","severity":1,"message":"236","line":12,"column":10,"nodeType":"168","messageId":"169","endLine":12,"endColumn":20},{"ruleId":"166","severity":1,"message":"206","line":12,"column":22,"nodeType":"168","messageId":"169","endLine":12,"endColumn":32},{"ruleId":"166","severity":1,"message":"207","line":13,"column":8,"nodeType":"168","messageId":"169","endLine":13,"endColumn":12},{"ruleId":"166","severity":1,"message":"208","line":14,"column":8,"nodeType":"168","messageId":"169","endLine":14,"endColumn":11},{"ruleId":"166","severity":1,"message":"209","line":15,"column":8,"nodeType":"168","messageId":"169","endLine":15,"endColumn":18},{"ruleId":"166","severity":1,"message":"189","line":16,"column":8,"nodeType":"168","messageId":"169","endLine":16,"endColumn":15},{"ruleId":"166","severity":1,"message":"204","line":17,"column":8,"nodeType":"168","messageId":"169","endLine":17,"endColumn":14},{"ruleId":"166","severity":1,"message":"237","line":18,"column":10,"nodeType":"168","messageId":"169","endLine":18,"endColumn":13},{"ruleId":"166","severity":1,"message":"238","line":18,"column":15,"nodeType":"168","messageId":"169","endLine":18,"endColumn":23},{"ruleId":"166","severity":1,"message":"222","line":44,"column":11,"nodeType":"168","messageId":"169","endLine":44,"endColumn":17},{"ruleId":"166","severity":1,"message":"221","line":48,"column":11,"nodeType":"168","messageId":"169","endLine":48,"endColumn":35},{"ruleId":"224","severity":1,"message":"225","line":117,"column":21,"nodeType":"226","endLine":117,"endColumn":83},{"ruleId":"170","severity":1,"message":"239","line":33,"column":7,"nodeType":"172","endLine":33,"endColumn":9,"suggestions":"240"},{"ruleId":"170","severity":1,"message":"241","line":29,"column":7,"nodeType":"172","endLine":29,"endColumn":9,"suggestions":"242"},{"ruleId":"166","severity":1,"message":"243","line":2,"column":15,"nodeType":"168","messageId":"169","endLine":2,"endColumn":23},{"ruleId":"170","severity":1,"message":"244","line":14,"column":7,"nodeType":"172","endLine":14,"endColumn":9,"suggestions":"245"},"no-unused-vars","'testImg' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCartData'. Either include it or remove the dependency array.","ArrayExpression",["246"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-native-reassign",["247"],"no-negated-in-lhs",["248"],"'Redirect' is defined but never used.",["247"],["248"],"'setDataCatalog' is assigned a value but never used.","'FaCartArrowDown' is defined but never used.","'ShoppingCartIcon' is defined but never used.","'Box' is defined but never used.","'Popover' is defined but never used.","'PopupState' is defined but never used.","'bindTrigger' is defined but never used.","'bindPopover' is defined but never used.","'StyledBadge' is assigned a value but never used.","'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'getCartLength' and 'props.Auth.user_id'. Either include them or remove the dependency array.",["249"],"React Hook useEffect has a missing dependency: 'getCartLength'. Either include it or remove the dependency array.",["250"],"'toSection' is assigned a value but never used.","'Component' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["251"],"'Header' is defined but never used.","'Button' is defined but never used.","'CustomInput' is defined but never used.","'withStyles' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'Typography' is defined but never used.","'ButtonUI' is defined but never used.","'TableFooter' is defined but never used.","'CameraAltOutlined' is defined but never used.","'classes' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'page' is assigned a value but never used.","'setPages' is assigned a value but never used.","'showProd' is assigned a value but never used.","'setShowProd' is assigned a value but never used.","'MySwal' is assigned a value but never used.","'swalWithBootstrapButtons' is assigned a value but never used.","'toggle' is assigned a value but never used.","'toggleRequest' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["247"],["248"],"eqeqeq","Expected '===' and instead saw '=='.","unexpected","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","'makeStyles' is defined but never used.","'Add' is defined but never used.","'Settings' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["252"],"React Hook useEffect has a missing dependency: 'randomCssRgba'. Either include it or remove the dependency array.",["253"],"'defaults' is defined but never used.","React Hook useEffect has missing dependencies: 'props.data.obj.color', 'props.data.obj.legend', and 'props.data.obj.raw_data'. Either include them or remove the dependency array. If 'setColor' needs the current value of 'props.data.obj.color', you can also switch to useReducer instead of useState and read 'props.data.obj.color' in the reducer.",["254"],{"desc":"255","fix":"256"},"no-global-assign","no-unsafe-negation",{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},"Update the dependencies array to be: [getCartData]",{"range":"269","text":"270"},"Update the dependencies array to be: [getCartLength, props.Auth.user_id]",{"range":"271","text":"272"},"Update the dependencies array to be: [getCartLength, props.Cart.cartLength]",{"range":"273","text":"274"},"Update the dependencies array to be: [props]",{"range":"275","text":"276"},"Update the dependencies array to be: [id]",{"range":"277","text":"278"},"Update the dependencies array to be: [randomCssRgba]",{"range":"279","text":"280"},"Update the dependencies array to be: [props.data.obj.color, props.data.obj.legend, props.data.obj.raw_data]",{"range":"281","text":"282"},[2161,2163],"[getCartData]",[960,962],"[getCartLength, props.Auth.user_id]",[1020,1043],"[getCartLength, props.Cart.cartLength]",[864,866],"[props]",[1011,1013],"[id]",[970,972],"[randomCssRgba]",[431,433],"[props.data.obj.color, props.data.obj.legend, props.data.obj.raw_data]"]