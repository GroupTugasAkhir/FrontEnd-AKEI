{"ast":null,"code":"import Axios from 'axios';\nimport { API_URL_SQL } from './../../helpers/apiurl';\nexport const CartThunk = user_id => {\n  return dispatch => {\n    Axios.get(`${API_URL_SQL}/cart/cartLength/${user_id}`).then(res => {\n      let obj = {\n        user_id: user_id,\n        cartLength: res.data[0].cart\n      };\n      localStorage.setItem(\"cart_length\", res.data[0].cart);\n      dispatch({\n        type: 'GET',\n        payload: obj\n      });\n    }).catch(err => dispatch({\n      type: 'ERROR'\n    }));\n  };\n};\n_c = CartThunk;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartThunk\");","map":{"version":3,"sources":["D:/PURWADHIKA/FINAL PROJECT/FrontEnd-AKEI/src/redux/actions/CartAction.jsx"],"names":["Axios","API_URL_SQL","CartThunk","user_id","dispatch","get","then","res","obj","cartLength","data","cart","localStorage","setItem","type","payload","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,wBAA1B;AAEA,OAAO,MAAMC,SAAS,GAAIC,OAAD,IAAa;AAClC,SAAQC,QAAD,IAAa;AAChBJ,IAAAA,KAAK,CAACK,GAAN,CAAW,GAAEJ,WAAY,oBAAmBE,OAAQ,EAApD,EACCG,IADD,CACOC,GAAD,IAAO;AACT,UAAIC,GAAG,GAAG;AACNL,QAAAA,OAAO,EAAEA,OADH;AAENM,QAAAA,UAAU,EAAEF,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYC;AAFlB,OAAV;AAIAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAmCN,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYC,IAA/C;AACAP,MAAAA,QAAQ,CAAC;AAACU,QAAAA,IAAI,EAAE,KAAP;AAAaC,QAAAA,OAAO,EAAEP;AAAtB,OAAD,CAAR;AACH,KARD,EAQGQ,KARH,CAQUC,GAAD,IAAQb,QAAQ,CAAC;AAACU,MAAAA,IAAI,EAAE;AAAP,KAAD,CARzB;AASH,GAVD;AAWH,CAZM;KAAMZ,S","sourcesContent":["import Axios from 'axios'\r\nimport {API_URL_SQL} from './../../helpers/apiurl'\r\n\r\nexport const CartThunk = (user_id) => {\r\n    return (dispatch)=> {\r\n        Axios.get(`${API_URL_SQL}/cart/cartLength/${user_id}`)\r\n        .then((res)=>{\r\n            let obj = {\r\n                user_id: user_id,\r\n                cartLength: res.data[0].cart\r\n            }\r\n            localStorage.setItem(\"cart_length\",res.data[0].cart)\r\n            dispatch({type: 'GET',payload: obj})\r\n        }).catch((err)=> dispatch({type: 'ERROR'}))\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}