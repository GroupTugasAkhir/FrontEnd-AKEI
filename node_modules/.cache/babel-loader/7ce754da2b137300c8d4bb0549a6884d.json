{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\PURWADHIKA\\\\FINAL PROJECT\\\\FrontEnd-AKEI\\\\src\\\\pages\\\\admin\\\\admin_dashboard.jsx\",\n    _s = $RefreshSig$();\n\nimport Axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport PieChart from './../../component/PieChart/PieChart';\nimport LineChart from './../../component/LineChart/LineChart';\nimport './admindashboard.css';\nimport { API_URL_SQL } from '../../helpers';\n\nconst AdminDashboard = () => {\n  _s();\n\n  const [user, setUser] = useState(null);\n  const [product, setProduct] = useState(null);\n  const [branch, setBranch] = useState(null);\n  const [trx, setTrx] = useState(null);\n  useEffect(() => {\n    Axios.get(`${API_URL_SQL}/report/getuser`).then(res => {\n      let temp = res.data[0][0].user_qty - res.data[1][0].user_qty;\n      let obj = {\n        legend: ['Active User', 'Not Active'],\n        raw_data: [res.data[1][0].user_qty, temp],\n        title: 'User count'\n      };\n      let var_color = [];\n\n      for (let i = 0; i < obj.legend.length; i++) {\n        var_color[i] = randomCssRgba();\n      }\n\n      obj = { ...obj,\n        color: var_color\n      };\n      console.log(obj);\n      setUser({\n        obj\n      });\n    }).catch(err => console.log(err));\n    Axios.get(`${API_URL_SQL}/report/getproduct`).then(res => {\n      let products = res.data;\n      let legend = [];\n      let raw_data = [];\n      let color = [];\n      products.map((val, index) => {\n        legend[index] = val.product_name;\n        raw_data[index] = val.qty;\n        color[index] = randomCssRgba();\n      });\n      let obj = {\n        legend,\n        raw_data,\n        color,\n        title: 'Product Inventory'\n      };\n      setProduct({\n        obj\n      });\n    });\n    Axios.get(`${API_URL_SQL}/report/getbranch`).then(res => {\n      let branchs = res.data;\n      let legend = [];\n      let raw_data = [];\n      let color = [];\n      branchs.map((val, index) => {\n        legend[index] = val.location_name;\n        raw_data[index] = val.act_branch;\n        color[index] = randomCssRgba();\n      });\n      let obj = {\n        legend,\n        raw_data,\n        color,\n        title: 'Active Branch'\n      };\n      setBranch({\n        obj\n      });\n    });\n    Axios.get(`${API_URL_SQL}/report/gettransactions`).then(res => {\n      let labels = [];\n      let data = [];\n      res.data.map((val, index) => {\n        var date = new Date(parseInt(val.date_in));\n        var fdate = date.getFullYear() + '/' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '/' + (\"0\" + date.getDate()).slice(-2);\n        labels[index] = fdate;\n        console.log(fdate);\n        data[index] = val.price;\n      });\n      let obj = {\n        labels,\n        data,\n        title: 'Daily Transaction'\n      };\n      setTrx({\n        obj\n      });\n    });\n  }, []);\n\n  const randomNumber = (min, max) => Math.floor(Math.random() * (max - min + 1) + min);\n\n  const randomByte = () => randomNumber(0, 255);\n\n  const randomCssRgba = () => `rgba(${[randomByte(), randomByte(), randomByte(), 0.5].join(',')})`;\n\n  if (user === null && product === null && branch === null && trx === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-tab\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"piechart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-chart\",\n        children: user ? /*#__PURE__*/_jsxDEV(PieChart, {\n          data: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-chart\",\n        children: product ? /*#__PURE__*/_jsxDEV(PieChart, {\n          data: product\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-chart\",\n        children: branch ? /*#__PURE__*/_jsxDEV(PieChart, {\n          data: branch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"linechart-container mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-chart\",\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: trx\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AdminDashboard, \"JI9pEPcddAidVzFNuC5UhgL1Ylk=\");\n\n_c = AdminDashboard;\nexport default AdminDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"sources":["D:/PURWADHIKA/FINAL PROJECT/FrontEnd-AKEI/src/pages/admin/admin_dashboard.jsx"],"names":["Axios","React","useEffect","useState","PieChart","LineChart","API_URL_SQL","AdminDashboard","user","setUser","product","setProduct","branch","setBranch","trx","setTrx","get","then","res","temp","data","user_qty","obj","legend","raw_data","title","var_color","i","length","randomCssRgba","color","console","log","catch","err","products","map","val","index","product_name","qty","branchs","location_name","act_branch","labels","date","Date","parseInt","date_in","fdate","getFullYear","getMonth","slice","getDate","price","randomNumber","min","max","Math","floor","random","randomByte","join"],"mappings":"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","sourcesContent":["import Axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport PieChart from './../../component/PieChart/PieChart'\r\nimport LineChart from './../../component/LineChart/LineChart'\r\nimport './admindashboard.css'\r\nimport { API_URL_SQL } from '../../helpers';\r\n\r\n\r\nconst AdminDashboard = () => {\r\n\r\n    const [user,setUser] = useState(null)\r\n    const [product,setProduct] = useState(null)\r\n    const [branch,setBranch] = useState(null)\r\n    const [trx,setTrx] = useState(null)\r\n\r\n    useEffect(()=>{\r\n        Axios.get(`${API_URL_SQL}/report/getuser`)\r\n        .then((res)=>{\r\n            let temp = res.data[0][0].user_qty - res.data[1][0].user_qty \r\n            let obj = {\r\n                legend : ['Active User','Not Active'],\r\n                raw_data : [res.data[1][0].user_qty,temp],\r\n                title : 'User count'\r\n            }\r\n            let var_color = []\r\n            for(let i=0;i<obj.legend.length;i++){\r\n                var_color[i] = randomCssRgba()\r\n            }\r\n            obj = {...obj,color:var_color}\r\n            console.log(obj)\r\n            setUser({obj})\r\n        }).catch((err)=>console.log(err))\r\n        Axios.get(`${API_URL_SQL}/report/getproduct`)\r\n        .then((res)=>{\r\n            let products = res.data\r\n            let legend = [] \r\n            let raw_data = []\r\n            let color = []\r\n            products.map((val,index)=>{\r\n                legend[index] = val.product_name\r\n                raw_data[index] = val.qty\r\n                color[index] = randomCssRgba()\r\n            })\r\n            let obj = {\r\n                legend,\r\n                raw_data,\r\n                color,\r\n                title: 'Product Inventory'\r\n            }\r\n            setProduct({obj})\r\n        })\r\n        Axios.get(`${API_URL_SQL}/report/getbranch`)\r\n        .then((res)=>{\r\n            let branchs = res.data\r\n            let legend = [] \r\n            let raw_data = []\r\n            let color = []\r\n            branchs.map((val,index)=>{\r\n                legend[index] = val.location_name\r\n                raw_data[index] = val.act_branch\r\n                color[index] = randomCssRgba()\r\n            })\r\n            let obj = {\r\n                legend,\r\n                raw_data,\r\n                color,\r\n                title: 'Active Branch'\r\n            }\r\n            setBranch({obj})\r\n        })\r\n        Axios.get(`${API_URL_SQL}/report/gettransactions`)\r\n        .then((res)=>{\r\n            let labels = []\r\n            let data = []\r\n            res.data.map((val,index)=>{\r\n                var date = new Date(parseInt(val.date_in));\r\n                var fdate = date.getFullYear() + '/' + (\"0\" + (date.getMonth() + 1)).slice(-2) + '/' + (\"0\" + date.getDate()).slice(-2);\r\n                labels[index] = fdate\r\n                console.log(fdate)\r\n                data[index] = val.price\r\n            })\r\n            let obj = {\r\n                labels,\r\n                data,\r\n                title : 'Daily Transaction'\r\n            }\r\n            setTrx({obj})\r\n        })\r\n        \r\n    },[])\r\n\r\n    const randomNumber = (min, max) => Math.floor(Math.random() * (max - min + 1) + min);\r\n    const randomByte = () => randomNumber(0, 255)\r\n    const randomCssRgba = () => `rgba(${[randomByte(), randomByte(), randomByte(), 0.5].join(',')})`\r\n    \r\n\r\n    if(user === null && product === null && branch === null && trx === null){\r\n        return <div>Loading</div>\r\n    }\r\n        \r\n    return (\r\n        <div className='dashboard-tab'>\r\n            <div className=\"piechart-container\">\r\n                <div className=\"content-chart\">\r\n                    {\r\n                        user?\r\n                        <PieChart data={user}/>\r\n                        : null\r\n                    }\r\n                </div>\r\n                <div className=\"content-chart\">\r\n                    {\r\n                        product?\r\n                        <PieChart data={product}/>\r\n                        : null\r\n                    }\r\n                </div>\r\n                <div className=\"content-chart\">\r\n                    {\r\n                        branch?\r\n                        <PieChart data={branch}/>\r\n                        : null\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className='linechart-container mt-5'>\r\n                <div className=\"content-chart\">\r\n                    <LineChart data={trx}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminDashboard"]},"metadata":{},"sourceType":"module"}